{"version":3,"sources":["context/auth.js","utils/AuthRoute.js","components/LikeButton.js","utils/graphql.js","components/DeleteButton.js","components/PostCard.js","utils/hooks.js","components/PostForm.js","img/Atlas.jpg","img/atlas3.png","components/SignupOrLogin.js","pages/Home.js","pages/Login.js","pages/Profile.js","pages/Register.js","components/MenuBar.js","components/CreateComment.js","components/LikePopup.js","pages/SinglePost.js","App.js","ApolloProvider.js","reportWebVitals.js","index.js"],"names":["initialState","user","localStorage","getItem","decodedToken","jwtDecode","exp","Date","now","removeItem","AuthContext","createContext","login","userData","logout","authReducer","state","action","type","payload","AuthProvider","props","useReducer","dispatch","Provider","value","setItem","token","AuthRoute","Component","component","rest","useContext","render","to","LIKE_POST_MUTATION","gql","LikeButton","post","id","likeCount","likes","useState","liked","setLiked","useEffect","find","like","username","useMutation","variables","postId","likePost","likeVar","likeButton","Button","color","Icon","name","basic","as","Link","Popup","content","trigger","labelPosition","onClick","Label","pointing","FETCH_POSTS_QUERY","DELETE_POST_MUTATION","DELETE_COMMENT_MUTATION","DeleteButton","commentId","callback","confirmOpen","setConfirmOpen","mutation","update","proxy","data","readQuery","query","writeQuery","getPosts","filter","p","deletePostOrMutation","floated","style","margin","class","Confirm","open","onCancel","onConfirm","PostCard","body","createdAt","commentCount","Card","fluid","Content","Image","size","src","Header","Meta","moment","fromNow","Description","extra","console","log","padding","useForm","values","setValues","onChange","event","target","onSubmit","preventDefault","CREATE_POST_MUTATION","PostForm","createPost","result","error","Form","Field","Input","placeholder","className","graphQLErrors","message","SignupOrLogin","pathname","window","location","path","substr","activeItem","setActiveItem","handleItemClick","e","Grid","Row","Segment","minHeight","minWidth","backgroundColor","maxWidth","Reveal","animated","visible","Container","display","opacity","logo","hidden","paddingLeft","paddingTop","width","height","logo2","primary","marginLeft","active","inverted","secondary","Home","useQuery","loading","posts","columns","Column","Transition","Group","map","marginBottom","LOGIN_USER","Login","context","errors","setErrors","loginUser","password","_","history","push","onError","err","extensions","exception","noValidate","label","Object","keys","length","Profile","React","setVisible","Sidebar","Pushable","Menu","animation","icon","onHide","vertical","Item","Pusher","centered","marginTop","toUpperCase","email","paddingBottom","REGISTER_USER","Register","addUser","confirmPassword","register","MenuBar","position","CREATE_COMMENT_MUTATION","CreateComment","submitComment","comment","setComment","CommentInputRef","useRef","current","blur","disabled","trim","ref","LikePopup","setOpen","Modal","paddingRight","onClose","onOpen","Actions","FETCH_POST_QUERY","SinglePost","postMarkup","match","params","getPost","comments","App","exact","httpLink","createHttpLink","uri","authLink","setContext","headers","Authorization","client","ApolloClient","link","concat","cache","InMemoryCache","ApolloProvider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.f6a2a751.chunk.js","sourcesContent":["import React, {useReducer,createContext} from 'react';\r\nimport jwtDecode from 'jwt-decode';\r\n\r\nconst initialState= {user:null}\r\n\r\n\r\nif(localStorage.getItem('jwtToken')){\r\n    const decodedToken =jwtDecode(localStorage.getItem('jwtToken'));\r\n    if(decodedToken.exp * 1000 < Date.now()){\r\n        localStorage.removeItem('jwtToken')\r\n    } else {\r\n        initialState.user =decodedToken;\r\n    }\r\n}\r\n\r\n\r\nconst AuthContext =createContext({\r\n    user:null,\r\n    login: (userData) => {},\r\n    logout:()=>{}\r\n});\r\n\r\nfunction authReducer(state,action){\r\n    switch(action.type){\r\n        case \"LOGIN\":\r\n            return{\r\n                ...state,\r\n                user:action.payload\r\n            }\r\n        case \"LOGOUT\":\r\n            return{\r\n                ...state,\r\n                user:null\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nfunction AuthProvider(props){\r\n    const[state,dispatch]=useReducer(authReducer,initialState)\r\n\r\n    function login(userData){\r\n        localStorage.setItem(\"jwtToken\",userData.token);\r\n        dispatch({\r\n            type:'LOGIN',\r\n            payload:userData\r\n        })\r\n    }\r\n    function logout(){\r\n        localStorage.removeItem(\"jwtToken\");\r\n        dispatch({type:'LOGOUT'});\r\n    }\r\n    return (\r\n        <AuthContext.Provider value={{user:state.user,login,logout}}\r\n        {...props} />\r\n    )\r\n}\r\n\r\nexport {AuthContext,AuthProvider};","import React, {useContext} from 'react';\r\nimport {Route, Redirect} from 'react-router-dom';\r\n\r\nimport {AuthContext} from '../context/auth'\r\n\r\nfunction AuthRoute({component:Component, ...rest}){\r\n    const {user} =useContext(AuthContext);\r\n    return (\r\n        <Route {...rest}\r\n        render ={props =>\r\n            user? <Redirect to =\"/\"/>:<Component {...props} />\r\n        }\r\n        />\r\n    )\r\n}\r\nexport default AuthRoute","import React, {useContext,useEffect,useState} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {useMutation} from '@apollo/react-hooks'\r\nimport gql from 'graphql-tag'\r\nimport {Button,Popup,Label,Icon} from 'semantic-ui-react'\r\n\r\n\r\n\r\nfunction LikeButton({user, post:{id,likeCount,likes}}){\r\n    const [liked,setLiked] =useState(false);\r\n \r\n    \r\n    useEffect(() => {\r\n        if(user && likes.find(like =>like.username === user.username)){\r\n           \r\n            setLiked(true)\r\n        }\r\n        else{\r\n            setLiked(false)\r\n        }\r\n    }, [user,likes]);\r\n\r\n \r\n\r\n    const [likePost] =useMutation(LIKE_POST_MUTATION,{\r\n        variables:{postId:id}\r\n    })\r\n    \r\n    const likeVar= liked?\"UnLike Post\":\"Like Post\";\r\n\r\n    const likeButton = user ? (liked ? ( \r\n      <Button color='teal'>\r\n        <Icon name='heart' />\r\n      </Button>\r\n      \r\n):(<Button color='teal' basic>\r\n<Icon name='heart' />\r\n</Button>)\r\n):(<Button as={Link} to='/login' color='teal' basic>\r\n<Icon name='heart' />\r\n</Button>)\r\n\r\n\r\nreturn(\r\n    <Popup content={likeVar} trigger={<Button as=\"div\" labelPosition=\"right\" onClick={likePost}>\r\n    {likeButton}\r\n    <Label basic color='teal' pointing=\"left\">\r\n    {likeCount}\r\n    </Label>\r\n    </Button>} />\r\n    \r\n    \r\n\r\n)\r\n\r\n\r\n}\r\n\r\nconst LIKE_POST_MUTATION = gql`\r\n    mutation likePost($postId:ID!){\r\n        likePost(postId:$postId){\r\n            id\r\n            likes{\r\n                id\r\n                username\r\n            }\r\n            likeCount\r\n        }\r\n    }\r\n`\r\nexport default LikeButton","import gql from 'graphql-tag';\r\n\r\nexport const FETCH_POSTS_QUERY =gql`\r\n{\r\n    getPosts{\r\n        id\r\n        username\r\n        body\r\n        createdAt\r\n        likeCount\r\n        likes{\r\n            username\r\n        }\r\n        commentCount\r\n        comments{\r\n            id\r\n            username\r\n            createdAt\r\n        }\r\n    }\r\n}`;","import React,{useContext,useState} from 'react';\r\nimport gql from 'graphql-tag'\r\nimport { useMutation } from '@apollo/client';\r\nimport { AuthContext } from '../context/auth';\r\nimport{Button,Popup,Confirm, Icon} from 'semantic-ui-react'\r\n\r\nimport {FETCH_POSTS_QUERY} from '../utils/graphql';\r\n\r\nfunction DeleteButton({postId,commentId,callback}){\r\n\r\n    const [confirmOpen,setConfirmOpen] =useState(false);\r\n    const mutation=commentId?DELETE_COMMENT_MUTATION:DELETE_POST_MUTATION\r\n    const [deletePostOrMutation]=useMutation(mutation,{\r\n        update(proxy) {\r\n            setConfirmOpen(false);\r\n            if (!commentId) {\r\n              const data = proxy.readQuery({\r\n                query: FETCH_POSTS_QUERY\r\n              });\r\n            //   data.getPosts = data.getPosts.filter((p) => p.id !== postId);\r\n              proxy.writeQuery({ query: FETCH_POSTS_QUERY, data:{getPosts:data.getPosts.filter((p) => p.id !== postId)} });\r\n            }\r\n            if (callback) callback();\r\n          },\r\n          variables: {\r\n            postId,\r\n            commentId\r\n          }\r\n    })    \r\n    return(\r\n        <>\r\n        <Popup content={(!commentId)?'Delete this Post?':'Delete this Comment?'} trigger={<Button as='div' floated=\"right\" color='red' onClick={()=> setConfirmOpen(true)}>\r\n     \r\n        <i style ={{margin:0}} class=\"trash alternate icon\" ></i>\r\n        </Button>} />\r\n      \r\n      <Confirm open={confirmOpen}\r\n      onCancel={()=>setConfirmOpen(false)}\r\n    onConfirm= {deletePostOrMutation} />\r\n    </>\r\n    )\r\n\r\n}\r\n\r\nconst DELETE_POST_MUTATION=gql`\r\n    mutation deletePost($postId:ID!){\r\n        deletePost(postId:$postId)\r\n    }\r\n\r\n`\r\nconst DELETE_COMMENT_MUTATION=gql`\r\n    mutation deleteComment($postId:ID!,$commentId:ID!){\r\n        deleteComment(postId:$postId,commentId:$commentId){\r\n            id\r\n            comments{\r\n                id \r\n                username\r\n                createdAt\r\n                body\r\n            }\r\n            commentCount\r\n        }\r\n    }\r\n\r\n`\r\nexport default DeleteButton","  \r\nimport React, { useContext } from 'react';\r\nimport { Button, Card, Icon, Label, Image,Popup } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport {AuthContext} from '../context/auth';\r\nimport LikeButton from './LikeButton'\r\nimport DeleteButton from './DeleteButton';\r\n\r\nfunction PostCard({\r\n    post: { body, createdAt, id, username, likeCount, commentCount, likes }\r\n  }) {\r\nconst {user} =useContext(AuthContext);\r\n\r\n\r\n   \r\n   function deletePost(){\r\n    console.log('Comment Post!!')\r\n}\r\n   function commentPost(){\r\n       console.log('Comment Post!!')\r\n   }\r\nreturn(\r\n    <Card fluid>\r\n    <Card.Content >\r\n    <Image\r\n          floated=\"right\"\r\n          size=\"mini\"\r\n          src=\"https://react.semantic-ui.com/images/avatar/large/molly.png\"\r\n        />\r\n    <Card.Header>{username}</Card.Header>\r\n    <Card.Meta as={Link} to={`/posts/${id}`}>{moment(createdAt).fromNow(true)}</Card.Meta>\r\n    <Card.Description>{body}</Card.Description>\r\n    </Card.Content>\r\n    <Card.Content extra>\r\n    <LikeButton user={user} post={{id,likes,likeCount}} />\r\n    <Popup content='Add Comments' trigger={<Button labelPosition='right' onClick={commentPost}>\r\n    <Button as={Link} to={`/posts/${id}`} basic color='blue'>\r\n      <Icon name='comments' />\r\n      \r\n    </Button>\r\n    <Label as='a' basic color='teal' pointing='left' style={{padding:10}}>\r\n      {commentCount}\r\n    </Label>\r\n  </Button>}/>\r\n    \r\n    {user && user.username ===username && <DeleteButton postId={id} />}   </Card.Content>\r\n  </Card>\r\n);\r\n}\r\nexport default PostCard;\r\n","import {useState} from 'react';\r\n\r\nexport const useForm =(callback,initialState={})=>{\r\n    const [values, setValues]=useState(initialState);\r\n\r\n    const onChange =(event) =>{\r\n        setValues({...values,[event.target.name]:event.target.value})\r\n\r\n    };\r\n    const onSubmit = event =>{\r\n        event.preventDefault();\r\n        callback();\r\n    }\r\n    return {\r\n        onChange,\r\n        onSubmit,\r\n        values\r\n    }\r\n}","import React from 'react';\r\nimport { Button, Form } from 'semantic-ui-react';\r\nimport gql from 'graphql-tag';\r\nimport { useMutation } from '@apollo/react-hooks';\r\n\r\nimport { useForm } from '../utils/hooks';\r\nimport { FETCH_POSTS_QUERY } from '../utils/graphql';\r\n\r\nfunction PostForm() {\r\n  const { values, onChange, onSubmit } = useForm(createPostCallback, {\r\n    body: ''\r\n  });\r\n\r\n  const [createPost, { error }] = useMutation(CREATE_POST_MUTATION, {\r\n    variables: values,\r\n    update(proxy, result) {\r\n      const data = proxy.readQuery({\r\n        query: FETCH_POSTS_QUERY\r\n      })\r\n      proxy.writeQuery({\r\n        query: FETCH_POSTS_QUERY,\r\n        data: {\r\n          getPosts: [result.data.createPost, ...data.getPosts],\r\n        },\r\n      });\r\n      values.body = '';\r\n    }\r\n    \r\n  });\r\n\r\n  if(error){\r\n    console.log(error);\r\n  }\r\n\r\n  function createPostCallback() {\r\n    createPost();\r\n  }\r\n\r\n  return (\r\n      <>\r\n      <Form onSubmit={onSubmit}>\r\n        <h2>Create a post:</h2>\r\n        <Form.Field>\r\n          <Form.Input\r\n            placeholder=\"Hi World!\"\r\n            name=\"body\"\r\n            onChange={onChange}\r\n            value={values.body}\r\n            error={error ? true : false}\r\n          />\r\n          <Button type=\"submit\" color=\"teal\">\r\n            Post\r\n          </Button>\r\n        </Form.Field>\r\n      </Form>\r\n      {\r\n        error && (\r\n          <div className=\"ui error message\" style=\"margin-bottom:20\">\r\n            <ul className=\"list\">\r\n              <li>\r\n              {error.graphQLErrors[0].message}</li></ul>\r\n          </div>\r\n        )\r\n      }\r\n      </>\r\n\r\n  );\r\n}\r\n\r\nconst CREATE_POST_MUTATION = gql`\r\n  mutation createPost($body: String!) {\r\n    createPost(body: $body) {\r\n      id\r\n      body\r\n      createdAt\r\n      username\r\n      likes {\r\n        id\r\n        username\r\n        createdAt\r\n      }\r\n      likeCount\r\n      comments {\r\n        id\r\n        body\r\n        username\r\n        createdAt\r\n      }\r\n      commentCount\r\n    }\r\n  }\r\n`;\r\n\r\nexport default PostForm;","export default __webpack_public_path__ + \"static/media/Atlas.427bc54c.jpg\";","export default __webpack_public_path__ + \"static/media/atlas3.852ac624.png\";","import React,{useState} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport logo from '../img/Atlas.jpg';\r\nimport logo2 from '../img/atlas3.png'\r\nimport { Icon,Header,Container,Segment,Grid,Button,Card,Reveal,Image } from 'semantic-ui-react'\r\n\r\nfunction SignupOrLogin() {    \r\n    const pathname=window.location.pathname;\r\n    const path =pathname === '/' ?'home':pathname.substr(1);\r\n    const [activeItem, setActiveItem] =useState(path)    \r\n    const handleItemClick = (e, { name }) => setActiveItem(name)\r\n    const divStyle={display:'inline-block',marginRight:'50',marginTop:\"100\"}\r\n    return (  \r\n        <Grid.Row>\r\n          <Segment style={{ minHeight: 600,minWidth: 1130, }}>\r\n          <Grid.Row className=\"logoClass\" style={{backgroundColor: \"grey\",maxWidth: 1100}}>\r\n          <Reveal animated='move left'>\r\n          <Reveal.Content visible>\r\n          <Container style={{\r\n            display: 'block',   \r\n            opacity: 1.0\r\n           }}>\r\n          <Segment style={{ minHeight: 600,maxWidth: 1110, }}><Image src={logo} /></Segment>\r\n            </Container>\r\n          </Reveal.Content>\r\n          <Reveal.Content hidden>   \r\n          <Container style={{minHeight:600, paddingLeft: '400px',paddingTop:'120px'}}>         \r\n          <Image width={300} height={200} src={logo2}></Image>         \r\n          <Header as='h1' style={{paddingLeft:'60px'}}>Let's Connect</Header>       \r\n          <Button primary \r\n          style={{ paddingLeft: '25px',marginLeft:'20px' }}\r\n          name='login'\r\n          active={activeItem === 'login'}\r\n          onClick={handleItemClick}\r\n          as={Link}\r\n          to='/login'><Icon inverted name='sign-in' />Login</Button>\r\n          <Button secondary \r\n          style={{ paddingLeft: '25px',marginLeft:'50px' }}\r\n          name='register'\r\n          active={activeItem === 'register'}\r\n          onClick={handleItemClick}\r\n          as={Link}\r\n          to='/register'><Icon inverted name='signup' />Sign Up</Button></Container>\r\n          </Reveal.Content>\r\n          </Reveal>\r\n          </Grid.Row>\r\n          </Segment>\r\n          <Container width=\"120\" className=\"footer\"><Icon name=\"copyright\"/> Copyright Swetlana 2021</Container>\r\n          </Grid.Row>\r\n        )\r\n  }\r\nexport default SignupOrLogin","import React, {useContext} from 'react';\r\nimport {useQuery} from '@apollo/react-hooks'\r\nimport gql from 'graphql-tag';\r\n\r\nimport { Container, Grid, Icon,Label,Transition } from 'semantic-ui-react'\r\nimport PostCard from '../components/PostCard.js'\r\nimport {AuthContext} from '../context/auth'\r\nimport PostForm from '../components/PostForm'\r\nimport SignupOrLogin from '../components/SignupOrLogin'\r\nimport { FETCH_POSTS_QUERY } from '../utils/graphql'\r\n\r\nfunction Home(){\r\n    const {user} = useContext(AuthContext);\r\n    const {\r\n        loading, \r\n        data: { getPosts: posts } ={}\r\n    } = useQuery(FETCH_POSTS_QUERY);\r\n        \r\n     \r\n    const divStyle={display:'block'}\r\n    \r\n    return(\r\n        <Container fluid>       \r\n        <Grid columns={3}>\r\n            {user &&(<Grid.Row className=\"page-title\">\r\n            <h1> Recent Posts</h1>\r\n            </Grid.Row>)}\r\n            <Grid.Row>\r\n            {user && (\r\n                <Grid.Column>\r\n                <PostForm/></Grid.Column>\r\n            )}\r\n            {loading ? (\r\n                <h1>Loading posts..</h1>\r\n                ):(\r\n                <Transition.Group>\r\n                {user&&\r\n                    posts && posts.map((post) =>(\r\n                        <Grid.Column key={post.id} style= {{marginBottom:20}}>\r\n                        <PostCard post ={post}/>\r\n                        </Grid.Column>\r\n                    ))\r\n                }\r\n                </Transition.Group>\r\n            )}\r\n            </Grid.Row>\r\n            </Grid>\r\n            {!user && (  <SignupOrLogin />\r\n                )}\r\n            </Container>   \r\n    )\r\n}\r\nexport default Home;","import { setRandomFallback } from \"bcryptjs\";\r\n\r\nimport React, { useContext,useState } from 'react';\r\nimport {Button, Form } from \"semantic-ui-react\";\r\nimport {useMutation} from '@apollo/react-hooks'\r\nimport gql from 'graphql-tag'\r\nimport {useForm} from '../utils/hooks'\r\nimport { PromiseProvider } from \"mongoose\";\r\n\r\nimport {AuthContext} from '../context/auth'\r\n\r\nfunction Login(props){\r\nconst context=useContext(AuthContext)\r\n    const [errors, setErrors]=useState({})\r\n    \r\n   const {onChange, onSubmit, values} = useForm(loginUserCallback,{username:'',\r\n   password:''});\r\n    \r\n   const [loginUser, { loading }] = useMutation(LOGIN_USER, {\r\n    update(\r\n      _,\r\n      {\r\n        data: { login: userData }\r\n      }\r\n    ) {\r\n      context.login(userData);\r\n      console.log(context)\r\n      props.history.push('/');\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    variables: values\r\n  });\r\n    function loginUserCallback(){\r\n        loginUser();\r\n    }\r\n\r\n    return(\r\n        <div className='form-container'>\r\n            <Form onSubmit={onSubmit} noValidate className={loading?'loading':''}>\r\n            <h1>Login</h1>\r\n            <Form.Input \r\n            label=\"Username\"\r\n            type=\"text\"\r\n            placeholder=\"Username..\"\r\n            name=\"username\"\r\n            value={values.username}\r\n            error={errors.username ? true:false}\r\n            onChange={onChange}/>           \r\n\r\n            <Form.Input \r\n            label=\"Password\"\r\n            type=\"password\"\r\n            placeholder=\"Password..\"\r\n            name=\"password\"\r\n            value={values.password}            \r\n            error={errors.password ? true:false}\r\n            onChange={onChange}/>\r\n\r\n            \r\n            \r\n            <Button type=\"submit\" primary>Login</Button>\r\n            </Form>\r\n            {Object.keys(errors).length > 0 && (\r\n                <div className=\"ui error message\">\r\n                <ul className=\"list\">\r\n                {\r\n                    Object.values(errors).map((value)=>(\r\n                        <li key ={value}>{value}</li>\r\n                    ))}\r\n                    </ul>\r\n                    </div>\r\n            )}      \r\n        </div>\r\n    );\r\n}\r\n    \r\n\r\n\r\nconst LOGIN_USER =gql`\r\n    mutation login(\r\n        $username:String!,\r\n        $password:String!\r\n    ){\r\n        login(\r\n                username: $username,\r\n                password: $password\r\n            ){\r\n                id \r\n                email \r\n                username \r\n                createdAt \r\n                token\r\n            }\r\n    }\r\n`;\r\n\r\nexport default Login;\r\n","import React,{useContext} from 'react'\r\nimport {AuthContext} from '../context/auth'\r\nimport { Image,Grid,Button,Form, Icon, Card, Menu, Segment, Sidebar } from 'semantic-ui-react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nfunction Profile(){\r\n    const {user} = useContext(AuthContext);\r\n    const [visible, setVisible] = React.useState(true)\r\n    let postMarkup;\r\n   if(user){\r\n    postMarkup=(  \r\n        <Grid>        \r\n                <Grid.Column style={{minHeight:500}}>\r\n                  <Sidebar.Pushable as={Segment} onClick={() => setVisible(!visible)}>\r\n                    <Sidebar\r\n                      as={Menu}\r\n                      animation='overlay'\r\n                      icon='labeled'\r\n                      inverted                      \r\n                      onHide={() => setVisible(false)}\r\n                      vertical\r\n                      visible={visible}\r\n                      width='thin'\r\n                      color='teal'\r\n                      \r\n                    >\r\n                      <Menu.Item as={Link} to='/'>\r\n                        <Icon name='home' />\r\n                        Home\r\n                      </Menu.Item>\r\n                      <Menu.Item as='a' to=\"#profilePic\">\r\n                        <Icon name='user' />\r\n                        Profile\r\n                      </Menu.Item>\r\n                      <Menu.Item as='a'>\r\n                        <Icon name='lock' />\r\n                        Password Reset\r\n                      </Menu.Item>\r\n                      <Menu.Item as='a'>\r\n                        <Icon name='globe' />\r\n                        About\r\n                      </Menu.Item>\r\n                    </Sidebar>\r\n          \r\n                    <Sidebar.Pusher>\r\n                      <Segment basic id=\"profilePic\">                        \r\n                        <Card fluid centered style={{marginTop:50,maxWidth:600,minHeight:250}}>\r\n                        <Card.Content>\r\n                          <Image\r\n                            floated='right'\r\n                            size='mini'\r\n                            src='https://react.semantic-ui.com/images/avatar/large/steve.jpg'\r\n                          />\r\n                          <Card.Header>{user.username.toUpperCase()}</Card.Header>\r\n                          <Card.Meta>{user.email}</Card.Meta>\r\n                          <Card.Description>\r\n                            Do you want to change your <strong>Email Id?</strong>\r\n                          </Card.Description>\r\n                        </Card.Content>\r\n                        <Form style={{paddingLeft:10,paddingBottom:50,maxWidth:400}}><Form.Input placeholder=\"Enter your Email Id\"></Form.Input></Form>\r\n                        <Card.Content extra>\r\n                          <div className='ui two buttons'>\r\n                            <Button basic color='green'>\r\n                              Change\r\n                            </Button>\r\n                            <Button basic color='red'>\r\n                              Cancel\r\n                            </Button>\r\n                          </div>\r\n                        </Card.Content>\r\n                      </Card>\r\n                        </Segment>\r\n                    </Sidebar.Pusher>\r\n                  </Sidebar.Pushable>\r\n                </Grid.Column>\r\n              </Grid>\r\n  )\r\n}\r\n  else{\r\n    postMarkup=(\r\n        <Grid><Grid.Row>Session Expired... Click to Login again..</Grid.Row><Grid.Row><Button primary as={Link} to=\"/login\">Login</Button></Grid.Row></Grid>\r\n    )\r\n}\r\nreturn postMarkup;\r\n}\r\n\r\nexport default Profile","import { setRandomFallback } from \"bcryptjs\";\r\n\r\nimport React, { useContext,useState } from 'react';\r\nimport {Button, Form } from \"semantic-ui-react\";\r\nimport {useMutation} from '@apollo/react-hooks'\r\nimport gql from 'graphql-tag'\r\nimport {useForm} from '../utils/hooks'\r\nimport { PromiseProvider } from \"mongoose\";\r\n\r\n\r\nimport {AuthContext} from '../context/auth'\r\nfunction Register(props){\r\n    const context=useContext(AuthContext)\r\n    const [errors, setErrors]=useState({})\r\n    \r\n   \r\n   const {onChange, onSubmit, values} = useForm(registerUser,{username:'',\r\n   email:'',\r\n   password:'',\r\n   confirmPassword:''})\r\n    \r\n    const [addUser,{loading}] = useMutation(REGISTER_USER,{\r\n        update(_,{data:{register:userData}}){\r\n            // console.log(result);\r\n            context.login(userData)\r\n            props.history.push('/');\r\n        },\r\n        onError(err){\r\n            // console.log(err);\r\n            setErrors(err.graphQLErrors[0].extensions.exception.errors)\r\n        },\r\n        variables:values\r\n    })\r\n    \r\n    function registerUser(){\r\n        addUser();\r\n    }\r\n\r\n    return(\r\n        <div className='form-container'>\r\n            <Form onSubmit={onSubmit} noValidate className={loading?'loading':''}>\r\n            <h1>Register</h1>\r\n            <Form.Input \r\n            label=\"Username\"\r\n            type=\"text\"\r\n            placeholder=\"Username..\"\r\n            name=\"username\"\r\n            value={values.username}\r\n            error={errors.username ? true:false}\r\n            onChange={onChange}/>\r\n            \r\n            <Form.Input \r\n            label=\"Email\"\r\n            type=\"email\"\r\n            placeholder=\"Email..\"\r\n            name=\"email\"\r\n            value={values.email}            \r\n            error={errors.email ? true:false}\r\n            onChange={onChange}/>\r\n\r\n            <Form.Input \r\n            label=\"Password\"\r\n            type=\"password\"\r\n            placeholder=\"Password..\"\r\n            name=\"password\"\r\n            value={values.password}            \r\n            error={errors.password ? true:false}\r\n            onChange={onChange}/>\r\n\r\n            <Form.Input \r\n            label=\"Confirm Password\"\r\n            type=\"password\"\r\n            placeholder=\"Confirm Password..\"\r\n            name=\"confirmPassword\"\r\n            value={values.confirmPassword}\r\n            error={errors.confirmPassword ? true:false}\r\n            onChange={onChange}/>\r\n            \r\n            <Button type=\"submit\" primary>Register</Button>\r\n            </Form>\r\n            {Object.keys(errors).length > 0 && (\r\n                <div className=\"ui error message\">\r\n                <ul className=\"list\">\r\n                {\r\n                    Object.values(errors).map((value)=>(\r\n                        <li key ={value}>{value}</li>\r\n                    ))}\r\n                    </ul>\r\n                    </div>\r\n            )}      \r\n        </div>\r\n    );\r\n}\r\n    \r\n\r\n\r\nconst REGISTER_USER =gql`\r\n    mutation register(\r\n        $username:String!\r\n        $email:String!\r\n        $password:String!\r\n        $confirmPassword:String!\r\n    ){\r\n        register(\r\n            registerInput:{\r\n                username: $username\r\n                email: $email\r\n                password:$password\r\n                confirmPassword:$confirmPassword\r\n            }){\r\n                id \r\n                email \r\n                username \r\n                createdAt \r\n                token\r\n            }\r\n    }\r\n`\r\n\r\nexport default Register;\r\n","import React, { useContext,useState } from 'react'\r\nimport { Menu } from 'semantic-ui-react'\r\nimport {Link} from 'react-router-dom'\r\nimport {AuthContext} from '../context/auth'\r\n\r\nfunction MenuBar() {\r\n    const {user,logout} = useContext(AuthContext)\r\n    const pathname=window.location.pathname;\r\n    const path =pathname === '/' ?'home':pathname.substr(1);\r\n    const [activeItem, setActiveItem] =useState(path)\r\n    const handleItemClick = (e, { name }) => setActiveItem(name)\r\n    const menubar= user?(\r\n      <Menu pointing secondary size =\"massive\" color='teal'>\r\n      <Menu.Item\r\n      name={user.username}\r\n      active\r\n      onClick={handleItemClick}\r\n      as={Link}\r\n      to='/'\r\n    />\r\n    \r\n    <Menu.Menu position='right'>\r\n    <Menu.Item\r\n      name='Logout'\r\n      onClick={logout}\r\n    />\r\n    \r\n      \r\n    </Menu.Menu>\r\n  </Menu>):(<Menu pointing secondary size =\"massive\" color='teal'>\r\n    <Menu.Item\r\n      name='home'\r\n      active={activeItem === 'home'}\r\n      onClick={handleItemClick}\r\n      as={Link}\r\n      to='/'\r\n    />\r\n    \r\n    <Menu.Menu position='right'>\r\n    <Menu.Item\r\n      name='login'\r\n      active={activeItem === 'login'}\r\n      onClick={handleItemClick}\r\n      as={Link}\r\n      to='/login'\r\n    />\r\n    <Menu.Item\r\n      name='register'\r\n      active={activeItem === 'register'}\r\n      onClick={handleItemClick}\r\n      as={Link}\r\n      to='/register'\r\n    />\r\n    \r\n      \r\n    </Menu.Menu>\r\n  </Menu>)\r\n    return menubar\r\n  \r\n}\r\nexport default MenuBar;","import React,{useRef, useState} from 'react';\r\nimport { Button, Feed, Form } from 'semantic-ui-react';\r\nimport { Card, Grid, Icon,Label,Transition } from 'semantic-ui-react'\r\nimport { GridColumn } from 'semantic-ui-react';\r\nimport { useMutation } from '@apollo/client';\r\nimport { useForm } from '../utils/hooks';\r\nimport gql from 'graphql-tag';\r\n\r\n\r\n\r\nfunction CreateComment({postId}){\r\n    const { values, onChange, onSubmit } = useForm(createCommentCallback,{\r\n        body: ''\r\n      });\r\n    const [comment,setComment] =useState('');    \r\n    const CommentInputRef=useRef(null)\r\n    const [submitComment] = useMutation(CREATE_COMMENT_MUTATION, {\r\n        update() {\r\n            setComment('');\r\n            CommentInputRef.current.blur();\r\n        },\r\n        variables:{\r\n            postId,\r\n            body:comment\r\n        }\r\n        \r\n      }); \r\n      \r\n  function createCommentCallback() {\r\n    submitComment();\r\n  }  \r\nreturn (\r\n<>\r\n      <Form onSubmit={onSubmit}>\r\n        <h3>Post a Comment..</h3>\r\n        <Form.Field>\r\n          <Form.Input\r\n            placeholder=\"Start Commenting..!\"\r\n            name=\"comment\"\r\n            onChange={(event) => setComment(event.target.value)}\r\n            value={comment}\r\n          />\r\n          <Button type=\"submit\" disabled={comment.trim() === ''} color=\"blue\" onClick=\"submitComment\" ref={CommentInputRef}>\r\n            Comment\r\n          </Button>\r\n        </Form.Field>\r\n      </Form>\r\n      </>\r\n\r\n  );\r\n\r\n\r\n}\r\nconst CREATE_COMMENT_MUTATION=gql`\r\n    mutation($postId:ID!,$body:String!){\r\n        createComment(postId:$postId,body:$body){\r\n            id\r\n            comments{\r\n            id\r\n            username\r\n            createdAt\r\n            body\r\n            }\r\n            commentCount\r\n        }\r\n    }\r\n\r\n`\r\nexport default CreateComment;","import React,{useEffect,useState} from 'react'\r\nimport { Container,Popup, Image,Grid,Transition ,Button, Header, Icon, Modal } from 'semantic-ui-react'\r\n\r\nimport {useMutation} from '@apollo/react-hooks'\r\nimport gql from 'graphql-tag'\r\n\r\nfunction LikePopup({user, post:{id,likeCount,likes}}) {\r\n  const [open, setOpen] = React.useState(false)\r\n  useEffect(() => {\r\n    if(user && likes.find(like =>like.username === user.username)){\r\n       console.log(\"popup\",likes)\r\n    }\r\n    \r\n}, [user,likes]);\r\n\r\n  return (\r\n    <Modal\r\n      basic\r\n      open={open}\r\n      trigger={<Button color='black' style={{paddingRight:10}}><Popup content='View who Liked this post' trigger={<Icon name=\"users\"></Icon>} /></Button>}\r\n      onClose={() => setOpen(false)}\r\n      onOpen={() => setOpen(true)}\r\n    >\r\n      <Header icon='heart' content='Who Liked This Post?' />\r\n      <Modal.Content>\r\n        <Grid>\r\n        {user &&(<Grid.Row className=\"page-title\">\r\n            </Grid.Row>)}\r\n            <Container>\r\n            {user && (\r\n                <Transition.Group>\r\n                {user&&\r\n                    likes && likes.map((like) =>(\r\n                        <Grid.Row key={like.id} style= {{marginBottom:20}}>\r\n                        <Image\r\n          floated=\"left\"\r\n          size=\"mini\"\r\n          src=\"https://react.semantic-ui.com/images/avatar/large/molly.png\"\r\n        />\r\n                        {like.username}\r\n                        </Grid.Row>\r\n                    ))\r\n                }\r\n                </Transition.Group>\r\n            )}\r\n            </Container>\r\n</Grid>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <Button color='red' onClick={() => setOpen(false)}>\r\n          <Icon name='close' /> Close\r\n        </Button>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default LikePopup","import React,{useContext} from 'react'\r\nimport gql from 'graphql-tag'\r\nimport {useQuery} from '@apollo/react-hooks'\r\nimport moment from 'moment';\r\nimport { Button,Popup,Card,Grid,Image,Icon,Label,Transition } from 'semantic-ui-react';\r\n\r\nimport {AuthContext} from '../context/auth'\r\nimport LikeButton from '../components/LikeButton';\r\nimport DeleteButton from '../components/DeleteButton';\r\nimport CreateComment from '../components/CreateComment';\r\nimport LikePopup from '../components/LikePopup';\r\n\r\nfunction SinglePost(props){\r\n    const postId=props.match.params.postId;\r\n    const {user} = useContext(AuthContext);\r\n    const {\r\n        loading, \r\n        data: { getPost } ={}\r\n    } =  useQuery(FETCH_POST_QUERY,{\r\n        variables: {\r\n            postId\r\n        }\r\n    });\r\n    let postMarkup;\r\n    if(!getPost)\r\n    {\r\n        postMarkup= <p> Loading Post . . </p>;\r\n    }\r\n    else {\r\n        const {id,body,createdAt,username,likeCount,likes,commentCount,comments}=getPost;\r\n        postMarkup=(\r\n            <Grid>\r\n            <Grid.Row>\r\n            <Grid.Column>\r\n            <Image\r\n          floated=\"right\"\r\n          size=\"mini\"\r\n          src=\"https://react.semantic-ui.com/images/avatar/large/molly.png\"\r\n        />\r\n            </Grid.Column>\r\n            <Grid.Column width={10}>\r\n            <Card fluid>\r\n            <Card.Content>\r\n            <Card.Header>{username}</Card.Header>\r\n            <Card.Meta>{moment(createdAt).fromNow()}</Card.Meta>\r\n            <Card.Description>{body}</Card.Description>\r\n            </Card.Content>\r\n            <hr/>\r\n            <Card.Content extra>\r\n            <LikePopup user={user} post={{id,username, likeCount, likes}}/>\r\n            <LikeButton user={user} post={{id,username, likeCount, likes}}/>\r\n            <Popup content='Add Comments' trigger={<Button as=\"div\" labelPosition=\"right\"\r\n            onClick={()=> console.log(\"comment\")}>\r\n            <Button basic color=\"blue\">\r\n            <Icon name = \"comments\"/></Button>\r\n            <Label basic color=\"blue\" pointing = \"left\">{commentCount}</Label>\r\n            </Button>} />        \r\n            \r\n            {user && user.username === username && (\r\n                <DeleteButton postId={id}/>\r\n            )}\r\n            </Card.Content>\r\n            </Card>\r\n            </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n            <Grid.Column>\r\n            </Grid.Column>\r\n            <Grid.Column width=\"10\">\r\n            {user &&          \r\n            <CreateComment postId={id}/> \r\n            }\r\n            </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n            \r\n            {loading ? (\r\n                <h1>Loading posts..</h1>\r\n                ):(\r\n                <Transition.Group>\r\n                {\r\n                    comments && comments.map((comment) =>(\r\n                        <Grid.Column key={comment.id} style= {{marginLeft:70}} width=\"10\">\r\n                        <Card fluid style= {{marginBottom:10}}>\r\n                        <Card.Content>\r\n                        {user && user.username === comment.username &&(\r\n                            <DeleteButton postId={id} commentId={comment.id} />\r\n                        )}\r\n                        <Card.Header>{comment.username}</Card.Header>\r\n                        <Card.Meta>{moment(comment.createdAt).fromNow()}</Card.Meta>\r\n                        <Card.Description>{comment.body}</Card.Description>\r\n                        </Card.Content>\r\n                        </Card>\r\n                        </Grid.Column>\r\n                    ))\r\n                }\r\n                </Transition.Group>\r\n            )}\r\n            </Grid.Row>\r\n            </Grid>\r\n        )\r\n    }\r\n    return postMarkup;\r\n}\r\n\r\nconst FETCH_POST_QUERY = gql`\r\n    query($postId: ID!){\r\n        getPost(postId:$postId){\r\n            id\r\n            body\r\n            createdAt\r\n            username\r\n            likeCount\r\n            likes{\r\n                username\r\n            }\r\n            commentCount\r\n            comments{\r\n                id\r\n                username\r\n                createdAt\r\n                body\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport default SinglePost","import './App.css';\r\nimport { BrowserRouter as Router, Route} from 'react-router-dom'\r\nimport {Container} from 'semantic-ui-react'\r\nimport 'semantic-ui-css/semantic.min.css'\r\n\r\nimport {AuthProvider} from './context/auth'\r\nimport AuthRoute from './utils/AuthRoute'\r\nimport Home from './pages/Home';\r\nimport Login from './pages/Login';\r\nimport Profile from './pages/Profile';\r\nimport Register from './pages/Register';\r\nimport MenuBar from './components/MenuBar'\r\nimport SinglePost from './pages/SinglePost';\r\nimport { AuthenticationError } from 'apollo-server-errors';\r\n\r\nfunction App() {\r\n  return (\r\n    <AuthProvider>\r\n    <Router>\r\n    <Container>\r\n    <MenuBar/>\r\n    <Route exact path ='/' component={Home} />\r\n    <Route exact path ='/profile' component={Profile} />\r\n    <AuthRoute exact path ='/login' component={Login} />\r\n    <AuthRoute exact path ='/register' component={Register} />\r\n    <Route exact path=\"/posts/:postId\" component={SinglePost} />    \r\n    </Container>\r\n    </Router>\r\n    </AuthProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react'\r\nimport App from './App'\r\nimport ApolloClient from 'apollo-client'\r\nimport { InMemoryCache } from 'apollo-cache-inmemory'\r\nimport { createHttpLink } from 'apollo-link-http'\r\nimport { ApolloProvider, HttpLink } from '@apollo/react-hooks'\r\nimport { setContext } from 'apollo-link-context'\r\n\r\n\r\nconst httpLink = createHttpLink({\r\n    uri: \"https://serene-wind-cave-45796.herokuapp.com/\"\r\n})\r\nconst authLink = setContext(() => {\r\n    const token = localStorage.getItem('jwtToken');\r\n    return {\r\n        headers: {\r\n            Authorization: token ? `Bearer ${token}` : ''\r\n        }\r\n    }\r\n})\r\n\r\nconst client = new ApolloClient({\r\n    link: authLink.concat(httpLink),\r\n    cache: new InMemoryCache()\r\n})\r\nexport default (\r\n    <ApolloProvider client={client}>\r\n        <App /></ApolloProvider>\r\n)","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport ApolloProvider from './ApolloProvider'\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n ApolloProvider,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}